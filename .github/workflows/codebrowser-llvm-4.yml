name: codebrowser for llvm-4

on:
  push:
    branches:
      - main  # Set a branch to deploy
  pull_request:

jobs:
  codebrowser:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        llvm-branches: [release/4.x]
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt install llvm-13 clang-13 libclang-13-dev lld-13
          sudo apt install build-essential make cmake ninja-build git python3-distutils python3-pip binutils binutils-dev
      - uses: actions/checkout@v4
        with:
          repository: 'KDAB/codebrowser'
          path: codebrowser
      - name: Build codebrowser
        run: |
          pushd codebrowser
          cmake . -DCMAKE_BUILD_TYPE=Release
          make -j `nproc`
          popd
      - uses: actions/checkout@v4
        with:
          repository: 'Enna1/llvm-project'
          ref: ${{ matrix.llvm-branches }}
          path: llvm-project
      - name: Get llvm version
        id: llvm-version
        run: |
          pushd llvm-project
          echo "LLVM_VERSION=$(git describe --always --tags)" >> $GITHUB_OUTPUT
          popd
      - name: Cache llvm build
        id: cache-llvm-build
        uses: actions/cache@v3
        with:
          path: llvm-project/build
          key: ${{ runner.os }}-llvm-build-${{ steps.llvm-version.outputs.LLVM_VERSION }}
      - name: Build llvm
        if: steps.cache-llvm-build.outputs.cache-hit != 'true'
        run: |
          pushd llvm-project
          mkdir build
          pushd build
          cmake -G "Ninja" \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_USE_LINKER=gold \
            -DLLVM_INCLUDE_TESTS=OFF \
            -DLLVM_INCLUDE_EXAMPLES=OFF \
            -DLLVM_INCLUDE_BENCHMARKS=OFF \
            ../llvm
          ninja
          popd
          popd
      - name: Run codebrowser generator
        run: |
          OUTPUT_DIRECTORY=$(echo ${{ matrix.llvm-branches }} | sed s:/:-:g)
          OUTPUT_DIRECTORY=./codebrowser-html-output/llvm-$OUTPUT_DIRECTORY
          VERSION=${{ steps.llvm-version.outputs.LLVM_VERSION }}
          DATA_DIRECTORY=$OUTPUT_DIRECTORY/../data
          BUILD_DIRECTORY=./llvm-project/build
          SOURCE_DIRECTORY=./llvm-project
          ./codebrowser/generator/codebrowser_generator -b $BUILD_DIRECTORY -a -o $OUTPUT_DIRECTORY -p llvm:$SOURCE_DIRECTORY:$VERSION
          ./codebrowser/indexgenerator/codebrowser_indexgenerator $OUTPUT_DIRECTORY
          cp -rv ./codebrowser/data $DATA_DIRECTORY
          tar czf codebrowser-html-output.tar.gz --directory=./codebrowser-html-output .
      - name: Upload generated HTML files to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./codebrowser-html-output.tar.gz
          asset_name: llvm-${{ matrix.llvm-branches }}-codebrowser
          tag: ${{ github.ref }}
          overwrite: true
          body: "The code browser HTML files for llvm-${{ matrix.llvm-branches }}-${{ steps.llvm-version.outputs.LLVM_VERSION }}"
